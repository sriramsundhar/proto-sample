# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: build

  release:
    if: startsWith(github.event.head_commit.message, 'Gradle Release Plugin') != true && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Publish
        run: |
          echo "setup ssh agent"
          eval `ssh-agent -s`
          echo "setup"
          echo "$CI_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - >/dev/null
          echo "added private ssh"
          mkdir -p ~/.ssh
          touch ~/.ssh/id_rsa.pub
          echo "$CI_SSH_PUBLIC_KEY" | tr -d '\r' > ~/.ssh/id_rsa.pub
          echo "added public ssh"
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com" && git config user.name "github_action"
          echo "git@github.com:${GITHUB_REPOSITORY}.git"
          git remote set-url origin "git@github.com:${GITHUB_REPOSITORY}.git"
          git fetch origin main && git checkout main
          git remote -v
          ./gradlew release -Prelease.useAutomaticVersion=true
        env:
          CI_SSH_PUBLIC_KEY: ${{ secrets.CI_SSH_PUBLIC_KEY}}
          CI_SSH_PRIVATE_KEY: ${{ secrets.CI_SSH_PRIVATE_KEY}}
          ARTIFACTORY_USERNAME: ${{ github.actor }}
          ARTIFACTORY_PASSCODE: ${{ secrets.GITHUB_TOKEN }}
